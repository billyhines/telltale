"""Add race analysis models

Revision ID: 2790a58153a1
Revises: cbb8f9ad5db8
Create Date: 2025-03-04 20:33:49.257298

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '2790a58153a1'
down_revision = 'cbb8f9ad5db8'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('races',
    sa.Column('race_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('race_name', sa.String(length=128), nullable=False),
    sa.Column('race_date', sa.DateTime(), nullable=False),
    sa.Column('gpx_file_path', sa.String(length=256), nullable=False),
    sa.Column('wind_direction', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('is_processed', sa.Boolean(), nullable=True),
    sa.Column('processing_error', sa.Text(), nullable=True),
    sa.Column('total_distance', sa.Float(), nullable=True),
    sa.Column('duration', sa.Integer(), nullable=True),
    sa.Column('max_speed', sa.Float(), nullable=True),
    sa.Column('avg_speed', sa.Float(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('race_id')
    )
    with op.batch_alter_table('races', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_races_race_date'), ['race_date'], unique=False)
        batch_op.create_index(batch_op.f('ix_races_user_id'), ['user_id'], unique=False)

    op.create_table('race_marks',
    sa.Column('mark_id', sa.Integer(), nullable=False),
    sa.Column('race_id', sa.Integer(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('mark_type', sa.Enum('START', 'FINISH', 'WINDWARD', 'LEEWARD', 'OFFSET', 'OTHER', name='marktype'), nullable=False),
    sa.Column('name', sa.String(length=64), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['race_id'], ['races.race_id'], ),
    sa.PrimaryKeyConstraint('mark_id')
    )
    with op.batch_alter_table('race_marks', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_race_marks_race_id'), ['race_id'], unique=False)

    op.create_table('race_segments',
    sa.Column('segment_id', sa.Integer(), nullable=False),
    sa.Column('race_id', sa.Integer(), nullable=True),
    sa.Column('segment_type', sa.Enum('UPWIND', 'DOWNWIND', 'REACHING', name='segmenttype'), nullable=False),
    sa.Column('start_time', sa.DateTime(), nullable=False),
    sa.Column('end_time', sa.DateTime(), nullable=False),
    sa.Column('avg_speed', sa.Float(), nullable=True),
    sa.Column('distance', sa.Float(), nullable=True),
    sa.Column('avg_vmg', sa.Float(), nullable=True),
    sa.Column('start_index', sa.Integer(), nullable=True),
    sa.Column('end_index', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['race_id'], ['races.race_id'], ),
    sa.PrimaryKeyConstraint('segment_id')
    )
    with op.batch_alter_table('race_segments', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_race_segments_race_id'), ['race_id'], unique=False)

    op.create_table('track_points',
    sa.Column('point_id', sa.Integer(), nullable=False),
    sa.Column('race_id', sa.Integer(), nullable=True),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('elevation', sa.Float(), nullable=True),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('speed', sa.Float(), nullable=True),
    sa.Column('heading', sa.Float(), nullable=True),
    sa.Column('vmg', sa.Float(), nullable=True),
    sa.Column('true_wind_angle', sa.Float(), nullable=True),
    sa.Column('point_index', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['race_id'], ['races.race_id'], ),
    sa.PrimaryKeyConstraint('point_id')
    )
    with op.batch_alter_table('track_points', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_track_points_point_index'), ['point_index'], unique=False)
        batch_op.create_index(batch_op.f('ix_track_points_race_id'), ['race_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_track_points_timestamp'), ['timestamp'], unique=False)

    op.create_table('maneuvers',
    sa.Column('maneuver_id', sa.Integer(), nullable=False),
    sa.Column('race_id', sa.Integer(), nullable=True),
    sa.Column('maneuver_type', sa.Enum('TACK', 'GYBE', name='maneuvertype'), nullable=False),
    sa.Column('timestamp', sa.DateTime(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=False),
    sa.Column('longitude', sa.Float(), nullable=False),
    sa.Column('speed_before', sa.Float(), nullable=True),
    sa.Column('speed_after', sa.Float(), nullable=True),
    sa.Column('speed_loss', sa.Float(), nullable=True),
    sa.Column('duration', sa.Float(), nullable=True),
    sa.Column('entry_heading', sa.Float(), nullable=True),
    sa.Column('exit_heading', sa.Float(), nullable=True),
    sa.Column('heading_change', sa.Float(), nullable=True),
    sa.Column('vmg_before', sa.Float(), nullable=True),
    sa.Column('vmg_after', sa.Float(), nullable=True),
    sa.Column('efficiency', sa.Float(), nullable=True),
    sa.Column('start_point_id', sa.Integer(), nullable=True),
    sa.Column('center_point_id', sa.Integer(), nullable=True),
    sa.Column('end_point_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['center_point_id'], ['track_points.point_id'], ),
    sa.ForeignKeyConstraint(['end_point_id'], ['track_points.point_id'], ),
    sa.ForeignKeyConstraint(['race_id'], ['races.race_id'], ),
    sa.ForeignKeyConstraint(['start_point_id'], ['track_points.point_id'], ),
    sa.PrimaryKeyConstraint('maneuver_id')
    )
    with op.batch_alter_table('maneuvers', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_maneuvers_race_id'), ['race_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_maneuvers_timestamp'), ['timestamp'], unique=False)

    with op.batch_alter_table('sailing_sessions', schema=None) as batch_op:
        batch_op.drop_index('ix_sailing_sessions_date')
        batch_op.drop_index('ix_sailing_sessions_user_id')

    op.drop_table('sailing_sessions')
    with op.batch_alter_table('sailing_conditions', schema=None) as batch_op:
        batch_op.drop_index('ix_sailing_conditions_session_id')

    op.drop_table('sailing_conditions')
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('last_login', sa.DateTime(), nullable=True))

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.drop_column('last_login')

    op.create_table('sailing_conditions',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('wind_speed', sa.FLOAT(), nullable=True),
    sa.Column('wind_direction', sa.INTEGER(), nullable=True),
    sa.Column('wave_height', sa.FLOAT(), nullable=True),
    sa.Column('temperature', sa.FLOAT(), nullable=True),
    sa.Column('weather_notes', sa.TEXT(), nullable=True),
    sa.Column('session_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['session_id'], ['sailing_sessions.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('sailing_conditions', schema=None) as batch_op:
        batch_op.create_index('ix_sailing_conditions_session_id', ['session_id'], unique=False)

    op.create_table('sailing_sessions',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=128), nullable=True),
    sa.Column('date', sa.DATETIME(), nullable=True),
    sa.Column('duration', sa.INTEGER(), nullable=True),
    sa.Column('distance', sa.FLOAT(), nullable=True),
    sa.Column('max_speed', sa.FLOAT(), nullable=True),
    sa.Column('avg_speed', sa.FLOAT(), nullable=True),
    sa.Column('points_json', sa.TEXT(), nullable=True),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.Column('user_id', sa.INTEGER(), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('sailing_sessions', schema=None) as batch_op:
        batch_op.create_index('ix_sailing_sessions_user_id', ['user_id'], unique=False)
        batch_op.create_index('ix_sailing_sessions_date', ['date'], unique=False)

    with op.batch_alter_table('maneuvers', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_maneuvers_timestamp'))
        batch_op.drop_index(batch_op.f('ix_maneuvers_race_id'))

    op.drop_table('maneuvers')
    with op.batch_alter_table('track_points', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_track_points_timestamp'))
        batch_op.drop_index(batch_op.f('ix_track_points_race_id'))
        batch_op.drop_index(batch_op.f('ix_track_points_point_index'))

    op.drop_table('track_points')
    with op.batch_alter_table('race_segments', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_race_segments_race_id'))

    op.drop_table('race_segments')
    with op.batch_alter_table('race_marks', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_race_marks_race_id'))

    op.drop_table('race_marks')
    with op.batch_alter_table('races', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_races_user_id'))
        batch_op.drop_index(batch_op.f('ix_races_race_date'))

    op.drop_table('races')
    # ### end Alembic commands ###
